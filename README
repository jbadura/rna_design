Run prepare_data.py to create input directory with appropriate files.
It also creates output directories.

run.py executes appropriate commands for each rnadesign program.
For each algorithm we also execute rnafold on the resulting sequence.
For each id.in file we create the following:
id.out - output of the program
id.err - error stream of the program
id.fold.out - result of rnafold on output of the program
id.fold.err - error stream of rnafold
id.parsed.out - file with result sequence, structure, and rnafold structure
id.timeouted - this file is created instead of id.parsed.out if the program did not finish in time
id.rte - this file is created if the program crashed or the id.out file is empty

RNAsfbinv (https://github.com/matandro/RNAsfbinv)
Command:
python3 /RNAsfbinv/RNAfbinvCL.py -f infile 1> outfile 2> errfile
Example infile
TARGET_STRUCTURE=(.....(((((((((.....(((((.(....).)))))......))))))))).........)
TARGET_SEQUENCE=NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN

RNAinverse (https://www.tbi.univie.ac.at/RNA/RNAinverse.1.html)
Command:
RNAinverse < infile 1> outfile 2> errfile
Example infile
(.....(((((((((.....(((((.(....).)))))......))))))))).........)
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN

DesiRNA (https://github.com/fryzjergda/DesiRNA)
Command:
python3 /DesiRNA/DesiRNA.py -f' infile 1> outfile 2> errfile
Example infile
>name
name_6
>seq_restr
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
>sec_struct
(.....(((((((((.....(((((.(....).)))))......))))))))).........)

RNARedPrint (https://github.com/yannponty/RNARedPrint)
Command:
/RNARedPrint/_inst/bin/RNARedPrint --num 1 struct 1> outfile 2> errfile

Command:
echo struct | design-multistate.py --num 100 --gc 0.6 --tolerance=0.5 1> outfile 2> errfile
Take sequence with smallest E1

Command:
echo struct > tmp.txt && design-multistate.py -i tmp.txt --num 100 | calcprobs.py -i tmp.txt 1> outfile 2> errfile
Take sequence with highest Psum, lowest MFE

dss-opt (https://github.com/marcom/dss-opt)
Command:
/dss-opt/opt-md struct 1> outfile 2> errfile

INFO-RNA (https://github.com/BackofenLab/INFO-RNA
Command:
/INFO-RNA-2.1.2/INFO-RNA-2.1.2 struct 1> outfile 2> errfile

LeaRNA (https://github.com/automl/learna)
Command:
/LeaRNA/utils/execution_scripts/LEARNA.sh infile 1> outfile 2> errfile

Command:
/LeaRNA/utils/execution_scripts/Meta-LEARNA.sh infile 1> outfile 2> errfile

Command:
/LeaRNA/utils/execution_scripts/Meta-LEARNA-Adapt.sh infile 1> outfile 2> errfile

Example infile
(.....(((((((((.....(((((.(....).)))))......))))))))).........)

read_and_calc_results.py calculated the following metrics:
Sequence Identity - how many characters from the output sequence match the input sequence divided by sequence length
RNApdist - calculated between input sequence and output sequence
RNAdistance - calculated between input structure and structure obtained from RNAfold on output structure

https://www.tbi.univie.ac.at/RNA/RNApdist.1.html
https://www.tbi.univie.ac.at/RNA/RNAdistance.1.html
https://www.tbi.univie.ac.at/RNA/RNAfold.1.html
